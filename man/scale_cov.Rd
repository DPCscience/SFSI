% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R_utils_wC.R
\name{scale_cov}
\alias{scale_cov}
\title{scale_cov function}
\usage{
scale_cov(XtX, void = FALSE)
}
\arguments{
\item{XtX}{Symmetric variance-covariance matrix among \eqn{p}{p} variables}

\item{void}{\code{TRUE} or \code{FALSE} to whether return or not return the output.
When \code{FALSE} no result is displayed but the input \code{XtX} is modified. Default \code{void=FALSE}}
}
\value{
A matrix with the recalculated variances and covariances
}
\description{
Recalculate a variance-covariance matrix among \eqn{p}{p} variables to its equivalent for the variables scaled to have unit variance
}
\details{
For any variables
\ifelse{html}{\out{X<sub>i</sub>}}{\eqn{X_i}{X_i}} and
\ifelse{html}{\out{X<sub>j</sub>}}{\eqn{X_j}{X_j}} with standard deviations
\ifelse{html}{\out{sd(X<sub>i</sub>)}}{\eqn{sd(X_i)}{sd(X_i)}} and
\ifelse{html}{\out{sd(X<sub>j</sub>)}}{\eqn{sd(X_j)}{sd(X_j)}},
the variance-covariance matrix for the scaled variables
\ifelse{html}{\out{Y<sub>i</sub> = X<sub>i</sub>/sd(X<sub>i</sub>)}}{\eqn{Y_i=X_i/sd(X_i)}{Y_i = X_i/sd(X_i)}} and
\ifelse{html}{\out{Y<sub>j</sub> = X<sub>j</sub>/sd(X<sub>j</sub>)}}{\eqn{Y_j=X_j/sd(X_j)}{Y_j = X_j/sd(X_j)}},
formed by dividing original variables by their standard deviations, will contain as off-diagonal entry the covariance

\ifelse{html}{\out{<center>cov(Y<sub>i</sub>,Y<sub>j</sub>) = cov(X<sub>i</sub>,X<sub>j</sub>)/(sd(X<sub>i</sub>)sd(X<sub>j</sub>))</center>}}{\deqn{cov(Y_i,Y_j) = cov(X_i,X_j)/(sd(X_i)sd(X_j))}{cov(Y_i,Y_j) = cov(X_i,X_j)/(sd(X_i)sd(X_j))}}

while in the diagonal the variances will be
\ifelse{html}{\out{var(Y<sub>i</sub>) = var(X<sub>i</sub>)/var(X<sub>i</sub>) = 1}}{\eqn{var(Y_i)=var(X_i)/var(X_i)=1}{var(Y_i) = var(X_i)/var(X_i) = 1}}.

Note that the output matrix is equivalent to a correlation matrix.
}
\examples{
set.seed(1234)
require(SFSI)
# Simulate matrix
n = 100; p=10
X = matrix(rnorm(n*p),ncol=p)
COV = cov(X)   # Cross-product X'X

scale_cov(COV)
# it must be equal (but faster) to:
cov(scale(X))    # or
cov2cor(COV)

# Using void=TRUE
scale_cov(COV,void=TRUE)
COV   # notice that COV was modified
}
\author{
Marco Lopez-Cruz (\email{lopezcru@msu.edu}) and Gustavo de los Campos
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R_utils_wC.R
\name{saveBinary}
\alias{saveBinary}
\title{saveBinary function}
\usage{
saveBinary(X, filename = paste0(tempdir(), "/file.bin"), size = 4,
  verbose = TRUE)
}
\arguments{
\item{X}{Numeric matrix to save}

\item{filename}{Name that will be given to the binary file}

\item{size}{Size of a real variable in bytes (\code{size=4} for single precision and \code{size=8} for double precision)
that matrix \code{X} will occupy}

\item{verbose}{\code{TRUE} or \code{FALSE} to whether printing file information}
}
\description{
Save a fortran-formatted binary file at a defined precision (single or double).
}
\examples{
set.seed(1234)
require(SFSI)
# Simulate matrix
n = 10; p = 10
X = matrix(rnorm(n*p),ncol=p)
X

# Save matrix
saveBinary(X,filename="testMatrix1.bin",size=4)  # as single-precision
saveBinary(X,filename="testMatrix2.bin",size=8)  # as double-precision

# Read the single-precision matrix
X2 = readBinary("testMatrix1.bin")
X2
sum(abs(X-X2))   # Note the loss of precision

# Read the double-precision matrix
X2 = readBinary("testMatrix2.bin")
X2
sum(abs(X-X2))   # No loss of precision
}
\author{
Marco Lopez-Cruz (\email{lopezcru@msu.edu}) and Gustavo de los Campos
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R_utils_wC.R
\name{Methods_SFI}
\alias{summary.SFI}
\alias{plot.SFI}
\alias{coef.SFI}
\alias{fitted.SFI}
\title{SFI methods}
\usage{
\method{coef}{SFI}(object, ...)

\method{fitted}{SFI}(object, ...)

\method{summary}{SFI}(object, ...)
  
\method{plot}{SFI}(..., title=NULL, py=c("accuracy","MSE"))
}
\arguments{
\item{object}{An object of the class 'SFI'. One or more objects must be passed as \code{...} in the function \code{plot}}

\item{py}{Indicates whether to plot correlation (between observed and predicted) or MSE in y-axis}

\item{title}{Title of the plot}

\item{...}{Arguments to be passed: 
\itemize{
 \item \code{df}: Degrees of freedom: average number of predictors with non-zero coefficient (for function \code{coef})
 \item \code{object}: One or more objects of the class 'SFI' (for function \code{plot})
 \item Not needed for \code{summary} and \code{fitted} functions
}
}
}
\description{
\itemize{
 \item \code{'coef'}: Retrieves the regression coefficients for each value of lambda for each individual in the testing set.
 \item \code{'fitted'}: Returns the predicted values for each value of lambda (in columns) for each individual in the testing set (in rows). When using 'lars2' or 'solveEN' functions, a matrix \code{X} of predictors is needed
 \item \code{'summary'}: Returns accuracy, MSE, df, achieved by each value of the vector lambda. Also returns summary for the SFI with maximum accuracy and with minimum MSE.
 \item \code{'plot'}: Creates a plot of either accuracy or MSE versus the (average) number of predictors and versus lambda (in negative logarithm).
}
}
\examples{
  require(SFSI)
  data(wheat.E1) 
  data(wheat.G) # Genomic relationship matrix
  y = tapply(Y[,"YLD"],Y[,"gid"],mean) 
  index <- intersect(rownames(G),names(y))
  G = G[index,index]
  y = as.vector(y[index])
  
  fm1 = SFI(y,K=G,tst=1:100,trn=101:length(y))
  fm2 = SFI(y,K=G,tst=1:100,trn=101:length(y),alpha=0.5,name="alpha=0.5")
  
  yHat = fitted(fm1)        # Predicted values for each SFI
  corTST = summary(fm1)$accuracy  # Testing set accuracy (correlation cor(y,yHat))
  summary(fm1)$optCOR       # SFI with maximum accuracy
  summary(fm1)$optMSE       # SFI with minimum MSE
  plot(fm1,title=expression('corr('*y[obs]*','*y[pred]*') vs sparsity'))   
  plot(fm1,py="MSE",title='Mean Square Error vs sparsity')     
  plot(fm1,fm2)   
}
\author{
Marco Lopez-Cruz (\email{lopezcru@msu.edu}) and Gustavo de los Campos
}

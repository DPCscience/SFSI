% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/R_utils_wC.R
\name{BinaryFiles}
\alias{readBinary}
\alias{saveBinary}
\title{Binary files}
\usage{
saveBinary(X, filename = paste0(tempdir(), "/file.bin"), size = 4,
  verbose = TRUE)
  
readBinary(filename = paste0(tempdir(), "/file.bin"), indexRow = NULL,
  indexCol = NULL, verbose = TRUE)
}
\arguments{
\item{X}{Numeric matrix to save}

\item{filename}{Name of the binary file to save/read}

\item{size}{Size of a real variable in bytes (\code{size=4} for single precision and \code{size=8} for double precision)
that matrix to be saved \code{X} will occupy}

\item{indexRow}{Vector of integers indicating the rows to be read from the file. Default \code{indexRow=NULL} will read all the rows}

\item{indexCol}{Vector of integers indicating the columns to be read from the file. Default \code{indexCol=NULL} will read all the columns}

\item{verbose}{\code{TRUE} or \code{FALSE} to whether printing file information}
}
\description{
Save/read a fortran-formatted binary file that was saved at a defined precision (single or double).
}
\examples{
  \dontrun{
  set.seed(1234)
  require(SFSI)
  # Simulate matrix
  n = 10; p = 10
  X = matrix(rnorm(n*p),ncol=p)
  X

  # Save matrix
  saveBinary(X,filename="testMatrix1.bin",size=4)  # as single-precision
  saveBinary(X,filename="testMatrix2.bin",size=8)  # as double-precision

  # Read the single-precision matrix
  X2 = readBinary("testMatrix1.bin")
  X2
  sum(abs(X-X2))   # Note the loss of precision

  # Read the double-precision matrix
  X2 = readBinary("testMatrix2.bin")
  X2
  sum(abs(X-X2))   # No loss of precision

  # Read specific rows and columns
  indexRow = c(2,4,5,8,10)
  indexCol = c(1,2,6,7,10)
  X2 = readBinary("testMatrix2.bin",indexRow=indexRow,indexCol=indexCol)
  X2
  sum(abs(X[indexRow,indexCol]-X2))
 }
}
\author{
Marco Lopez-Cruz (\email{lopezcru@msu.edu}) and Gustavo de los Campos
}
